[{"content":"","permalink":"https://dothossein.github.io/git-tutorial/sample/","summary":"","title":""},{"content":"ساخت branch با دستور زیر یک branch ایجاد می کنیم\ngit branch \u0026lt;name\u0026gt; نشان دادن branch فعلی git branch تعویض branch git switch \u0026lt;name of branch\u0026gt; هر تغییراتی در هر برنچی صورت گیرد فقط بر روی همان برنچ اعمال می شود\nیک برنچ ایجاد و روی آن سویچ می کند git switch -c \u0026lt;name\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-3/","summary":"ساخت branch با دستور زیر یک branch ایجاد می کنیم\ngit branch \u0026lt;name\u0026gt; نشان دادن branch فعلی git branch تعویض branch git switch \u0026lt;name of branch\u0026gt; هر تغییراتی در هر برنچی صورت گیرد فقط بر روی همان برنچ اعمال می شود\nیک برنچ ایجاد و روی آن سویچ می کند git switch -c \u0026lt;name\u0026gt; ","title":"branch"},{"content":"git add با استفاده از cmd وارد دایرکتوری مورد نظر می شویم\ngit init\rgit status برای رهگیری و تِرَک فایل ها در یک دایرکتوری از دستورات زیر استفاده می کنیم\ngit add \u0026lt;file\u0026gt;\rیا\rgit add .\rیا\rgit add \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; برای عدم رهگیری و بازگشت به حالت قبل\ngit rm --cached \u0026lt;file\u0026gt; git commit با استفاده از مسیج کامیت ها را رهگیری میکنیم\ngit commit -m \u0026#34;\u0026lt;massage\u0026gt;\u0026#34; برای بار اول باید یوزر و ایمیل را وارد کنیم\ngit config --global user.email \u0026#34;your@email.com\u0026#34;\rgit config --global user.name \u0026#34;your name\u0026#34; مشاهده تغییرات و کامیت ها\ngit log --all --graph در صورتی که add کردن چند فایل را فراموش کرده باشیم و کامیت زده باشیم از \u0026ndash;amend استفاده می کنیم\ngit add .\rgit commit --amend در نتیجه کامیت جدید ایجاد نشده و روی همان کامیت قبلی فایل ها اد می شوند\ngit add \u0026amp; commit git commit -am \u0026#34;message\u0026#34; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-1/","summary":"git add با استفاده از cmd وارد دایرکتوری مورد نظر می شویم\ngit init\rgit status برای رهگیری و تِرَک فایل ها در یک دایرکتوری از دستورات زیر استفاده می کنیم\ngit add \u0026lt;file\u0026gt;\rیا\rgit add .\rیا\rgit add \u0026lt;file1\u0026gt; \u0026lt;file2\u0026gt; برای عدم رهگیری و بازگشت به حالت قبل\ngit rm --cached \u0026lt;file\u0026gt; git commit با استفاده از مسیج کامیت ها را رهگیری میکنیم\ngit commit -m \u0026#34;\u0026lt;massage\u0026gt;\u0026#34; برای بار اول باید یوزر و ایمیل را وارد کنیم","title":"git add \u0026 git commit"},{"content":"git diff مقایسه دایرکتوری و استیج\ngit diff git diff \u0026ndash;staged مقایسه آخرین کامیت و استیج\ngit diff --staged git diff HEAD مقایسه آخرین کامیت و دایرکتوری\ngit diff HEAD git diff \u0026lt;hash_comit_1\u0026gt;..\u0026lt;hash_commit_2\u0026gt; مقایسه دو کامیت\ngit diff \u0026lt;hash_comit_1\u0026gt;..\u0026lt;hash_commit_2\u0026gt; برای مشاهده هش:\ngit log --oneline git diff \u0026lt;branch_1\u0026gt;..\u0026lt;branch_2\u0026gt; مقایسه دو برنچ با هم\ngit diff \u0026lt;branch_1\u0026gt;..\u0026lt;branch_2\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-6/","summary":"git diff مقایسه دایرکتوری و استیج\ngit diff git diff \u0026ndash;staged مقایسه آخرین کامیت و استیج\ngit diff --staged git diff HEAD مقایسه آخرین کامیت و دایرکتوری\ngit diff HEAD git diff \u0026lt;hash_comit_1\u0026gt;..\u0026lt;hash_commit_2\u0026gt; مقایسه دو کامیت\ngit diff \u0026lt;hash_comit_1\u0026gt;..\u0026lt;hash_commit_2\u0026gt; برای مشاهده هش:\ngit log --oneline git diff \u0026lt;branch_1\u0026gt;..\u0026lt;branch_2\u0026gt; مقایسه دو برنچ با هم\ngit diff \u0026lt;branch_1\u0026gt;..\u0026lt;branch_2\u0026gt; ","title":"git diff"},{"content":"git ignore برای نادیده گرفتن تعدادی از فایل های در git status از .gitignore استفاده میکنیم در دایرکتوری مورد نظر یک فایل با نام .gitignore ایجاد میکنیم و تمامی فایل هایی که می خواهیم توسط گیت نادیده گرفته شوند را در آن می نویسیم\n.gitignore\nfile4.txt فایل بالا در git status نشان داده نمی شود\n","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-2/","summary":"git ignore برای نادیده گرفتن تعدادی از فایل های در git status از .gitignore استفاده میکنیم در دایرکتوری مورد نظر یک فایل با نام .gitignore ایجاد میکنیم و تمامی فایل هایی که می خواهیم توسط گیت نادیده گرفته شوند را در آن می نویسیم\n.gitignore\nfile4.txt فایل بالا در git status نشان داده نمی شود","title":"git ignore"},{"content":"merge brach بر روی برنچ master می رویم سپس دستور زیر:\ngit merge \u0026lt;name of branch\u0026gt; Conflict وارد فایل مورد نظر در ادیتور شده تداخلات نشان داده شده را رفع می کنیم و مجددا:\ngit add .\rgit commit -m \u0026#34;conflict fix\u0026#34; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-5/","summary":"merge brach بر روی برنچ master می رویم سپس دستور زیر:\ngit merge \u0026lt;name of branch\u0026gt; Conflict وارد فایل مورد نظر در ادیتور شده تداخلات نشان داده شده را رفع می کنیم و مجددا:\ngit add .\rgit commit -m \u0026#34;conflict fix\u0026#34; ","title":"merge branch"},{"content":"Rename branch ابتدا با دستور git switch بر روی برنچ مورد نظر رفته سپس با دستور زیر برنچ را تغییرنام می دهیم\ngit branch -m \u0026lt;renamed name\u0026gt; Delet branch ابتدا بر روی برنچی دیگر می رویم\ngit branch -D \u0026lt;name of branch\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-4/","summary":"Rename branch ابتدا با دستور git switch بر روی برنچ مورد نظر رفته سپس با دستور زیر برنچ را تغییرنام می دهیم\ngit branch -m \u0026lt;renamed name\u0026gt; Delet branch ابتدا بر روی برنچی دیگر می رویم\ngit branch -D \u0026lt;name of branch\u0026gt; ","title":"rename \u0026 delete branch"},{"content":" restore برای حذف تغییرات جدیدی که در دایرکتوری ایجاد کرده ایم\ngit restore \u0026lt;file\u0026gt; restore برای unstage کردن\ngit restore --staged \u0026lt;file\u0026gt; بازگشت به یک کامیت بدون تغییر هد git restore --source \u0026lt;hash\u0026gt; \u0026lt;file\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-8/","summary":" restore برای حذف تغییرات جدیدی که در دایرکتوری ایجاد کرده ایم\ngit restore \u0026lt;file\u0026gt; restore برای unstage کردن\ngit restore --staged \u0026lt;file\u0026gt; بازگشت به یک کامیت بدون تغییر هد git restore --source \u0026lt;hash\u0026gt; \u0026lt;file\u0026gt; ","title":"restore"},{"content":"revert بازگشت به یک کامیت\nانجام تغییرات در آن کامیت و حل conflict ها\nمجددا برگشت به کامیت آخر\ngit revert \u0026lt;hash\u0026gt;\rgit add .\rgit revert --continue تفاوت با دستور reset دستور ریست کامیت ها را پاک می کند اما revert آنها را نگه میدارد\n","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-10/","summary":"revert بازگشت به یک کامیت\nانجام تغییرات در آن کامیت و حل conflict ها\nمجددا برگشت به کامیت آخر\ngit revert \u0026lt;hash\u0026gt;\rgit add .\rgit revert --continue تفاوت با دستور reset دستور ریست کامیت ها را پاک می کند اما revert آنها را نگه میدارد","title":"revert"},{"content":"بازگشت به یک کامیت git log --oneline --all\rgit checkout \u0026lt;hash\u0026gt; ویا\ngit checkout HEAD~2 دستور بالا هد را دو ردیف پایین می آورد\nبازگشت به یک کامیت بدون تغییر هد git restore --source \u0026lt;hash\u0026gt; \u0026lt;file\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-7/","summary":"بازگشت به یک کامیت git log --oneline --all\rgit checkout \u0026lt;hash\u0026gt; ویا\ngit checkout HEAD~2 دستور بالا هد را دو ردیف پایین می آورد\nبازگشت به یک کامیت بدون تغییر هد git restore --source \u0026lt;hash\u0026gt; \u0026lt;file\u0026gt; ","title":"بازگشت به یک کامیت"},{"content":"حذف کامیت بدون حذف تغییرات فایل با استفاده از reset کامیت ها پاک می شوند اما تغییرات ایجاد شده در فایل حذف نمی شوند\ngit log --oneline --all\rgit reset \u0026lt;hash\u0026gt; حذف کامیت و حذف تغییرات فایل git reset --hard \u0026lt;hash\u0026gt; ","permalink":"https://dothossein.github.io/git-tutorial/blog/lesson-9/","summary":"حذف کامیت بدون حذف تغییرات فایل با استفاده از reset کامیت ها پاک می شوند اما تغییرات ایجاد شده در فایل حذف نمی شوند\ngit log --oneline --all\rgit reset \u0026lt;hash\u0026gt; حذف کامیت و حذف تغییرات فایل git reset --hard \u0026lt;hash\u0026gt; ","title":"حذف کامیت (reset)"}]